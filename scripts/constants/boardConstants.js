const BOARD_SIZE = 800;
const RANKS = 8;
const FILES = RANKS;
const SQUARE_SIZE = BOARD_SIZE / RANKS;
const BOARD_BORDER_STROKE_WIDTH = 4;
const BOARD_BORDER_WIDTH = SQUARE_SIZE / 2;
const BOARD_OFFSET = BOARD_BORDER_STROKE_WIDTH + BOARD_BORDER_WIDTH;
const CANVAS_SIZE = BOARD_BORDER_WIDTH * 2 + BOARD_BORDER_STROKE_WIDTH * 2 + BOARD_SIZE;
const COLORS = {
    DEBUG: '#C529D3',
    BUTTON_HOVER: '#525C73',
    LIGHTER: '#EEE',
    LIGHT: '#D9D9D9',
    DARK: '#343441',
    DARKER: '#222',
    MOVES: {
        CURRENT: '#F9F277B8',
        EMPTY: '#6D7ED0B8',
        TAKE_PIECE: '#5A9367B8',
        ENEMY: 'rgba(203,43,43,0.72)',
    },
};
const GAMESTATES = {
    PLAYING: 'PLAYING',
    RESIGNED: 'RESIGNED',
    OBSERVING: 'OBSERVING',
    DRAW_INSUFFICIENT_PIECES: 'DRAW_INSUFFICIENT_PIECES',
    DRAW_STALEMATE: 'DRAW_STALEMATE',
    CHECKMATE: 'CHECKMATE',
};

const GAME_END_DIALOG_WIDTH = 500; // Temp variable for later calculations
const GAME_END_DIALOG_HEIGHT = 300; // Temp variable for later calculations
const GAME_END_DIALOG = {
    WIDTH: GAME_END_DIALOG_WIDTH,
    HEIGHT: GAME_END_DIALOG_HEIGHT,
    X_POS: BOARD_OFFSET + BOARD_SIZE / 2 - GAME_END_DIALOG_WIDTH / 2,
    Y_POS: BOARD_OFFSET + BOARD_SIZE / 2 - GAME_END_DIALOG_HEIGHT / 2,
};

export {
    BOARD_SIZE,
    RANKS,
    FILES,
    SQUARE_SIZE,
    BOARD_BORDER_STROKE_WIDTH,
    BOARD_BORDER_WIDTH,
    BOARD_OFFSET,
    CANVAS_SIZE,
    COLORS,
    GAMESTATES,
    GAME_END_DIALOG,
};
